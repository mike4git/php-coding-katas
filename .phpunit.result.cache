C:37:"PHPUnit\Runner\DefaultTestResultCache":7990:{a:2:{s:7:"defects";a:44:{s:27:"CSVFormatterTest::showTable";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #7";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #4";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #5";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #6";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #0";i:5;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #1";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #2";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #3";i:4;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #8";i:4;s:45:"HappyNumberTest::countOfHappyNumbersUntil1000";i:4;s:41:"HappyNumberTest::isHappy with data set #1";i:4;s:41:"HappyNumberTest::isHappy with data set #2";i:4;s:41:"HappyNumberTest::isHappy with data set #0";i:4;s:41:"HappyNumberTest::isHappy with data set #3";i:4;s:41:"HappyNumberTest::isHappy with data set #4";i:4;s:41:"HappyNumberTest::isHappy with data set #5";i:4;s:24:"HappyNumberTest::isHappy";i:1;s:41:"HappyNumberTest::isHappy with data set #6";i:4;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #0";i:1;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #1";i:1;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #2";i:1;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #3";i:1;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #4";i:1;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #5";i:1;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #6";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #0";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #1";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #2";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #3";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #4";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #5";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #6";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #7";i:1;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #8";i:1;s:36:"Kata\Tests\FourInARowTest::gameStart";i:1;s:39:"Kata\Tests\FourInARowTest::changePlayer";i:1;s:37:"Kata\Tests\FourInARowTest::fullColumn";i:1;s:42:"Kata\Tests\FourInARowTest::multipleColumns";i:1;s:38:"Kata\Tests\FourInARowTest::verticalWin";i:1;s:40:"Kata\Tests\FourInARowTest::horizontalWin";i:1;s:39:"Kata\Tests\FourInARowTest::backSlashWin";i:1;s:35:"Kata\Tests\FourInARowTest::slashWin";i:1;s:35:"Kata\Tests\FourInARowTest::drawGame";i:1;}s:5:"times";a:65:{s:27:"CSVFormatterTest::showTable";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #0";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #1";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #2";d:0.005;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #3";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #4";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #5";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #6";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #7";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #8";d:0;s:99:"CSVFormatterTest::showTableGiveBackTwoSeparatedWordsWhenStringWithSemicolonIsGiven with data set #9";d:0;s:25:"HappyNumberTest::isHappy1";d:0;s:26:"HappyNumberTest::isHappy19";d:0.001;s:27:"HappyNumberTest::isUnHappy2";d:0.001;s:45:"HappyNumberTest::countOfHappyNumbersUntil1000";d:0.107;s:41:"HappyNumberTest::isHappy with data set #0";d:0.001;s:41:"HappyNumberTest::isHappy with data set #1";d:0;s:41:"HappyNumberTest::isHappy with data set #2";d:0;s:41:"HappyNumberTest::isHappy with data set #3";d:0;s:41:"HappyNumberTest::isHappy with data set #4";d:0;s:41:"HappyNumberTest::isHappy with data set #5";d:0;s:24:"HappyNumberTest::isHappy";d:0.007;s:41:"HappyNumberTest::isHappy with data set #6";d:0;s:57:"ArabicNumberToRomanCharConverterTest::handleTooBigNumbers";d:0.002;s:59:"ArabicNumberToRomanCharConverterTest::handleNegativeNumbers";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #0";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #1";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #2";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #3";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #4";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #5";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #6";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #7";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #8";d:0;s:72:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #9";d:0;s:73:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #10";d:0;s:73:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #11";d:0;s:73:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #12";d:0;s:73:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #13";d:0;s:73:"ArabicNumberToRomanCharConverterTest::convertSampleData with data set #14";d:0;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #0";d:0.002;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #1";d:0;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #2";d:0;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #3";d:0;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #4";d:0;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #5";d:0;s:59:"ArabicToRomanConverterTest::convertOnInput with data set #6";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #0";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #1";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #2";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #3";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #4";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #5";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #6";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #7";d:0;s:65:"Kata\Tests\FizzBuzzTest::returnOneWhenOneIsGiven with data set #8";d:0;s:36:"Kata\Tests\FourInARowTest::gameStart";d:0;s:39:"Kata\Tests\FourInARowTest::changePlayer";d:0;s:37:"Kata\Tests\FourInARowTest::fullColumn";d:0;s:42:"Kata\Tests\FourInARowTest::multipleColumns";d:0;s:38:"Kata\Tests\FourInARowTest::verticalWin";d:0;s:40:"Kata\Tests\FourInARowTest::horizontalWin";d:0;s:39:"Kata\Tests\FourInARowTest::backSlashWin";d:0;s:35:"Kata\Tests\FourInARowTest::slashWin";d:0;s:35:"Kata\Tests\FourInARowTest::drawGame";d:0;}}}